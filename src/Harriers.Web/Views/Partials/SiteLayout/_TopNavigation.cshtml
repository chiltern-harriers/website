@inherits Umbraco.Web.Mvc.UmbracoViewPage<List<NavigationListItem>>
@using Harriers.Web.Models.Navigation

<nav class="navbar navbar-expand-md navbar-dark bg-primary fg-primary">
    <div class="container">
        @*<a class="navbar-brand" href="#">Chiltern Harriers</a>*@
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navMenu" aria-controls="navMenu" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse justify-content-md-center" id="navMenu">
            <ul class="navbar-nav mr-auto">
                @RenderChildItems(Model)
            </ul>
        </div>
    </div>
</nav>

@helper RenderChildItems(List<NavigationListItem> listItems)
{
    if (listItems != null)
    {
        foreach (var item in listItems)
        {
            <li class="nav-item @(item.HasChildren ? "dropdown" : "")" class="@(Umbraco.AssignedContentItem.Url == item.Link.Url ? "active" : null)">

                @if (item.HasChildren)
                {
                    var id = Guid.NewGuid();
                    <a href="@(item.Link != null ? item.Link.Url : "#")"
                       id="dropdown-@id.ToString()"
                       role="button"
                       class="nav-link dropdown-toggle"
                       data-toggle="dropdown"
                       aria-haspopup="true"
                       aria-expanded="false">
                        @(item.Link != null ? item.Link.Text : item.Text)
                    </a>

                    <div class="dropdown-menu" aria-labelledby="dropdown-@id.ToString()">
                        @foreach (var child in item.Items)
                        {
                            if (!string.IsNullOrEmpty(child.Text))
                            {
                                @child.Text
                            }
                            else
                            {
                                <a class="dropdown-item" href="@child.Link.Url">@child.Link.Text</a>
                            }
                        }
                    </div>
                }
                else if (!string.IsNullOrEmpty(item.Text))
                {
                    @item.Text
                }
                else if (item.Link != null)
                {
                    <a class="nav-link @(item.HasChildren ? "dropdown-toggle" : "")" href="@item.Link.Url" target="@item.Link.Target">@item.Link.Text</a>
                }
            </li>
        }
    }
}   